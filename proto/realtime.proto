syntax = "proto3";

package gamecloud.relay;

option go_package = "github.com/turanheydarli/gamecloud/relay/pkg/api";
option csharp_namespace = "GameCloud.Relay";

message Envelope {
  string message_id = 1;
  oneof payload {
    JoinMatch join_match = 2;
    LeaveMatch leave_match = 3;
    MatchState match_state = 4;
    PlayerInput player_input = 5;
    MatchEvent match_event = 6;
  }
}

message JoinMatch {
  string match_id = 1;
  string player_id = 2;
  map<string, string> metadata = 3;
}

message LeaveMatch {
  string match_id = 1;
  string player_id = 2;
}

message MatchState {
  string match_id = 1;
  int64 tick = 2;
  bytes state = 3; 
}

message PlayerInput {
  string match_id = 1;
  string player_id = 2;
  int64 tick = 3;
  bytes input = 4; 
}

message MatchEvent {
  string match_id = 1;
  string event_type = 2;
  bytes data = 3;
}

service MatchService {
  rpc CreateMatch(CreateMatchRequest) returns (CreateMatchResponse);
  rpc ListMatches(ListMatchesRequest) returns (ListMatchesResponse);
  rpc GetMatchInfo(GetMatchInfoRequest) returns (GetMatchInfoResponse);
}

message CreateMatchRequest {
  string game_id = 1;
  int32 max_players = 2;
  map<string, string> metadata = 3;
}

message CreateMatchResponse {
  string match_id = 1;
}

message ListMatchesRequest {
  string game_id = 1;
  int32 limit = 2;
  string cursor = 3;
}

message ListMatchesResponse {
  repeated MatchInfo matches = 1;
  string next_cursor = 2;
}

message GetMatchInfoRequest {
  string match_id = 1;
}

message GetMatchInfoResponse {
  MatchInfo match = 1;
}

message MatchInfo {
  string match_id = 1;
  string game_id = 2;
  int32 max_players = 3;
  int32 connected_players = 4;
  map<string, string> metadata = 5;
  int64 created_at = 6;
}